environment:
  matrix:
    - PYTHON: "C:\\Python27"
      nodejs_version: "4.6"
      BROWSER: "PhantomJS"
    - PYTHON: "C:\\Python33"
      nodejs_version: "4.6"
      BROWSER: "Firefox"
    - PYTHON: "C:\\Python34"
      nodejs_version: "6.9"
      BROWSER: "PhantomJS"
    - PYTHON: "C:\\Python35"
      nodejs_version: "6.9"
      BROWSER: "Firefox"
    - PYTHON: "C:\\Python35"
      nodejs_version: "6.9"
      BROWSER: "IE"
matrix:
  allow_failures:
    - BROWSER: "IE"

install:
  - choco install firefox
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - ps: Install-Product node $env:nodejs_version
  - pip install virtualenv
  - virtualenv --clear venv
  - "venv\\Scripts\\activate.bat"

  - pip install coverage calmjs.dev
  - python setup.py develop

  # doing the env in this directory to save build time/bandwidth
  - calmjs npm --install nunja calmjs.dev -w -D
  - npm install karma-ie-launcher
  - "SET CALMJS_TEST_ENV=."

test_script:
  - coverage run -m unittest nunja.tests.make_suite
  - coverage report -m

  # for the JS
  - mkdir manual
  # As the binary invocation from within calmjs in Windows fail to work,
  # ignore errors here
  - calmjs karma -I -c --cover-test --browser=%BROWSER% rjs nunja --build-dir=manual
  # and do out of band testing directly with karma here with the
  # generated configuration file.
  - node_modules\.bin\karma start manual\karma.conf.js

artifacts:
  - path: dist\*

build: off
